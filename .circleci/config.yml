version: 2.0
orbs:
  aws-cli: circleci/aws-cli@0.1.15
jobs:
  build:
    docker:
      - image: circleci/node:8.10
    steps:
      - checkout
      - run:
          name: Determine which projects have changed and trigger the builds
          command: |
            # Identify modified directories
            LAST_SUCCESSFUL_BUILD_URL="https://circleci.com/api/v1.1/project/github/josephpaulmckenzie/project-management-express-api/tree/master?filter=completed&limit=1"
            LAST_SUCCESSFUL_COMMIT=`curl -Ss -u "$CIRCLE_TOKEN:" $LAST_SUCCESSFUL_BUILD_URL | jq -r '.[0]["vcs_revision"]'`

            #first commit in a branch
            if [[ ${LAST_SUCCESSFUL_COMMIT} == "null" ]]; then
              COMMITS="origin/master"
            else
              COMMITS="${CIRCLE_SHA1}..${LAST_SUCCESSFUL_COMMIT}"
            fi

            git diff --name-only $COMMITS | cut -d/ -f1 | sort -u > projects
            echo -e "Modified directories:\n`cat projects`\n"
            
            echo -e "get working directory"
            pwd

            echo -e "get file list"
            ls -la
            
            projects_inc_dep=(`cat projects`)
            
            echo -e "Building: ${projects_inc_dep[@]}\n"
            for project in ${projects_inc_dep[@]}; do
              if grep -Fxq $project build-directories.txt; then
                printf "\nTriggerring build for project: \n" $project
                curl -s -u c4254b884766854656fd102526185f7762fe5008: \
                  -d build_parameters[CIRCLE_JOB]=project-management-express-api \
                  https://circleci.com/api/v1.1/project/github/josephpaulmckenzie/project-management-express-api/tree/master
              fi
            done
  ec2-api:
    docker:
      - image: circleci/node:8.10
    steps:
      - checkout
      - run:
          name: Start Build for ec2-api
          command: |
            echo -e "sls install"
            sudo npm i -g serverless
            echo -e "go into project folder"
            cd ec2-api
            npm install
            export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            export AWS_DEFAULT_REGION=us-east-1
            echo -e "sls deploy new commit"
            serverless deploy
  
// Will send a message to a sns topic that will send out a text, email, slack or whatever else we want to.
// We can bypass sns and just send to what we want but putting it into a sns topic allows us to quickly
// add or change who or what the alert message goes to 

interface formattedLogMessage {
    messageType: string,
    fileName?: string,
    functionName: string,
    lineNumber: string,
    message: string,
    statusCode: number
}

interface logStackDetails {
    fileName: string,
    functionName: string,
    lineNumber: string,
    logMessage: string
}

// Need to figure out a proper return type for console logs 
// returning void or or any is not cool
const sendAlertMessage = (message: formattedLogMessage): void => {
    console.log(`Sending alert message for logs to ${message} group`)
}

const formatLogMessage = (message: string): logStackDetails => {

    const err = new Error(message);
    const errorStack = err.stack.split("\n")[2];
    const functionName = errorStack.split(" ")[5];
    const regex = /\((.*):(\d+):(\d+)\)$/;
    const absolutePath = regex.exec(errorStack);
    const filename = absolutePath[1].split("/").pop();
    const lineNumber = absolutePath[2];
    const logMessage = err.message;
    const logStackDetails = {
        fileName: filename,
        functionName: functionName,
        lineNumber: lineNumber,
        logMessage: logMessage,
    }
    return logStackDetails
}

const error = (message: string, statusCode: number): void => {
    const logStackDetails = formatLogMessage(message)
    const {
        fileName,
        functionName,
        lineNumber,
        logMessage
    } = logStackDetails

    const formattedLogMessage = {
        messageType: "Error",
        fileName: fileName,
        functionName: functionName,
        lineNumber: lineNumber,
        message: logMessage,
        statusCode: statusCode || 400
    }

    sendAlertMessage(formattedLogMessage);
    return console.error(formattedLogMessage)
}


const warning = (message: string, statusCode: number): void => {
    const logStackDetails = formatLogMessage(message)
    const {
        fileName,
        functionName,
        lineNumber,
        logMessage
    } = logStackDetails

    const formattedLogMessage = {
        messageType: "Warning",
        fileName: fileName,
        functionName: functionName,
        lineNumber: lineNumber,
        message: logMessage,
        statusCode: statusCode || 200
    }

    sendAlertMessage(formattedLogMessage);
    return console.warn(formattedLogMessage)
}

const info = (message: string, statusCode: number): void => {
    const logStackDetails = formatLogMessage(message)
    const {
        fileName,
        functionName,
        lineNumber,
        logMessage
    } = logStackDetails

    const formattedLogMessage = {
        messageType: "Info",
        fileName: fileName,
        functionName: functionName,
        lineNumber: lineNumber,
        message: logMessage,
        statusCode: statusCode || 200
    }
    return console.info(formattedLogMessage)
}

export { info, warning, error }
